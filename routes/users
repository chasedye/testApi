const express = require("express");
const mongoose = require("mongoose");
const { nextTick } = require("process");
const User = require("../models/users");
const router = express.Router();

// deletes the given recipe from the savedRecipes array in the given user
/*request format:
  {
    "userId": "the id of the user",
    "recipeId": "the id of the recipe"
  }

*/
router.put("/savedRecipes", (req, res) => {
  User.findOneAndUpdate(
    { _id: req.body.userId },
    { $pull: { savedRecipes: req.body.recipeId } }
  ).then((result) => {
    if (result) {
      console.log(result);
      res.status(200);
      res.json(result);
    } else {
      res.status(404);
    }
  });
});
//successfully tested

// deletes the given recipe from the madeRecipes array in the given user
/*request format:
  {
    "userId": "the id of the user",
    "recipeId": "the id of the recipe"
  }

*/
router.put("/madeRecipes", (req, res) => {
  User.findOneAndUpdate(
    { _id: req.body.userId },
    { $pull: { madeRecipes: req.body.recipeId } }
  ).then((result) => {
    if (result) {
      console.log(result);
      res.status(200);
      res.json(result);
    } else {
      res.status(404);
    }
  });
});
//successfully tested


//adds a recipe to the saved recipes array of the user
/*request format:
  {
    "userId": "the id of the user",
    "recipeId": "the id of the recipe"
  }

*/
router.post("/savedRecipes", (req, res) => {
  //first find the recipe in our database

  //if found, find the user and add recipe to user's saved recipes array

  //if not found, get recipe from spoonacular
    //create a new recipe object with the data modeled in models/recipes
    //add new recipe to our database
    //add its ID to the user's saved recipe array
  
});

module.exports = router;
